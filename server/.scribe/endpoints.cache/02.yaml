## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Admin endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/countries
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Countries'
      description: 'Returns paginated list of countries.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"Slovekia", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/countries
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Country'
      description: 'Creates a new country record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 75 characters.'
        required: true
        example: p
        type: string
        custom: []
    cleanBodyParameters:
      name: p
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"Slovekia", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The name field is required.","errors":{"name":["The name field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/countries/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Country'
      description: 'Returns a country record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the country.'
        required: true
        example: 01h3rdp0xyr90h5vx4pn5hff2g
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0xyr90h5vx4pn5hff2g
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"Slovekia", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/countries/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Country'
      description: 'Updates country record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the country.'
        required: true
        example: 01h3rdp0xyr90h5vx4pn5hff2g
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0xyr90h5vx4pn5hff2g
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"Slovekia", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/countries/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Country'
      description: 'Deletes country record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the country.'
        required: true
        example: 01h3rdp0xyr90h5vx4pn5hff2g
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0xyr90h5vx4pn5hff2g
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/currencies
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Currencies'
      description: 'Returns paginated list of currencies.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"First currency","description":"This is the first currency", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/currencies
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Currency'
      description: 'Creates a new currency record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: 'Must not be greater than 75 characters.'
        required: true
        example: etbnjlooqydor
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Id et quisquam eos occaecati eveniet.'
        type: string
        custom: []
    cleanBodyParameters:
      title: etbnjlooqydor
      description: 'Id et quisquam eos occaecati eveniet.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"First currency","description":"This is the first currency", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The title field is required.","errors":{"title":["The title field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/currencies/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Currency'
      description: 'Returns a currency record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the currency.'
        required: true
        example: 01h3rdp0zyv2tf6k4andngsc93
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0zyv2tf6k4andngsc93
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"First currency","description":"This is the first currency", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/currencies/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Currency'
      description: 'Updates currency record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the currency.'
        required: true
        example: 01h3rdp0zyv2tf6k4andngsc93
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0zyv2tf6k4andngsc93
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: null
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"First currency","description":"This is the first currency", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/currencies/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Currency'
      description: 'Deletes currency record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the currency.'
        required: true
        example: 01h3rdp0zyv2tf6k4andngsc93
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0zyv2tf6k4andngsc93
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/events
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Events'
      description: 'Returns paginated list of events.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event_hall":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall."},"host":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Host"},"title":"First Event","slug":"first-event","description":"This is the first event","start_date":"2023-01-23","start_time":"01:23","end_date":"2023-01-23","end_time":"01:23","age_limit":"18", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/events/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Event'
      description: 'Returns a event record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 01h3rdp156apkxnycafx138fy1
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp156apkxnycafx138fy1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event_hall":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall."},"host":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Host"},"title":"First Event","slug":"first-event","description":"This is the first event","start_date":"2023-01-23","start_time":"01:23","end_date":"2023-01-23","end_time":"01:23","age_limit":"18", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/events/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Event'
      description: 'Updates event record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 01h3rdp156apkxnycafx138fy1
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp156apkxnycafx138fy1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      event_hall_id:
        name: event_hall_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      host_id:
        name: host_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: false
        example: null
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-07-07T11:15:06'
        type: string
        custom: []
      start_time:
        name: start_time
        description: ''
        required: false
        example: null
        type: string
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date.'
        required: false
        example: '2023-07-07T11:15:06'
        type: string
        custom: []
      end_time:
        name: end_time
        description: ''
        required: false
        example: null
        type: string
        custom: []
      age_limit:
        name: age_limit
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      start_date: '2023-07-07T11:15:06'
      end_date: '2023-07-07T11:15:06'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event_hall":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall."},"host":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Host"},"title":"First Event","slug":"first-event","description":"This is the first event","start_date":"2023-01-23","start_time":"01:23","end_date":"2023-01-23","end_time":"01:23","age_limit":"18", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/events/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Event'
      description: 'Deletes event record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 01h3rdp156apkxnycafx138fy1
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp156apkxnycafx138fy1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/event-halls
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Event Halls'
      description: 'Returns paginated list of event halls.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/event-halls
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Event Hall'
      description: 'Creates a new event hall record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 150 characters.'
        required: true
        example: gskbhbojpejhzpaukenv
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters:
      name: gskbhbojpejhzpaukenv
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The name field is required.","errors":{"name":["The name field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/event-halls/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Event Hall'
      description: 'Returns a event hall record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event hall.'
        required: true
        example: 01h3rdp10z5hjx0pm45ng1gdea
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp10z5hjx0pm45ng1gdea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/event-halls/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Event Hall'
      description: 'Updates event hall record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event hall.'
        required: true
        example: 01h3rdp10z5hjx0pm45ng1gdea
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp10z5hjx0pm45ng1gdea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/event-halls/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Event Hall'
      description: 'Deletes event hall record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event hall.'
        required: true
        example: 01h3rdp10z5hjx0pm45ng1gdea
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp10z5hjx0pm45ng1gdea
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/feedbacks
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Feedbacks'
      description: 'Returns paginated list of feedbacks.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","added_by":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow"},"subject":"Feedback Subject","message":"This is the feedback message.", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/feedbacks
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Feedback'
      description: 'Creates a new feedback record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      subject:
        name: subject
        description: 'Must not be greater than 150 characters.'
        required: true
        example: vri
        type: string
        custom: []
      message:
        name: message
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ppdwcmysivi
        type: string
        custom: []
    cleanBodyParameters:
      subject: vri
      message: ppdwcmysivi
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","added_by":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow"},"subject":"Feedback Subject","message":"This is the feedback message.", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The subject field is required.","errors":{"subject":["The subject field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/feedbacks/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Feedback'
      description: 'Returns a feedback record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the feedback.'
        required: true
        example: 01h3rdp1hab6xx7st0hqcshx6j
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1hab6xx7st0hqcshx6j
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","added_by":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow"},"subject":"Feedback Subject","message":"This is the feedback message.", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/feedbacks/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Feedback'
      description: 'Deletes feedback record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the feedback.'
        required: true
        example: 01h3rdp1hab6xx7st0hqcshx6j
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1hab6xx7st0hqcshx6j
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/hosts
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Hosts'
      description: 'Returns paginated list of hosts.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","description":"John Snow is the king of pop.", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/hosts
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Host'
      description: 'Creates a new host record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 150 characters.'
        required: true
        example: wsgkpllfmfpxdj
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: false
        example: 'Laudantium consequatur harum est porro reiciendis quidem.'
        type: string
        custom: []
    cleanBodyParameters:
      name: wsgkpllfmfpxdj
      description: 'Laudantium consequatur harum est porro reiciendis quidem.'
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","description":"John Snow is the king of pop.", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The name field is required.","errors":{"name":["The name field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/hosts/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Host'
      description: 'Returns a host record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the host.'
        required: true
        example: 01h3rdp12ba4ss338wj4161gjq
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp12ba4ss338wj4161gjq
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","description":"John Snow is the king of pop.", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/hosts/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Host'
      description: 'Updates host record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the host.'
        required: true
        example: 01h3rdp12ba4ss338wj4161gjq
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp12ba4ss338wj4161gjq
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","description":"John Snow is the king of pop.", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/hosts/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Host'
      description: 'Deletes host record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the host.'
        required: true
        example: 01h3rdp12ba4ss338wj4161gjq
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp12ba4ss338wj4161gjq
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/newsletters
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Newsletters'
      description: 'Returns paginated list of newsletters.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","email":"john@snow.com", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/newsletters
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Newsletter'
      description: 'Creates a new newsletter record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 150 characters.'
        required: true
        example: tkmworsgcdfejv
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: iterry@example.net
        type: string
        custom: []
    cleanBodyParameters:
      name: tkmworsgcdfejv
      email: iterry@example.net
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","email":"john@snow.com", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The name field is required.","errors":{"name":["The name field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/newsletters/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Newsletter'
      description: 'Returns a newsletter record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the newsletter.'
        required: true
        example: 01h3rdp1j9x2wx731hvzedf403
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1j9x2wx731hvzedf403
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","email":"john@snow.com", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/newsletters/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Newsletter'
      description: 'Updates newsletter record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the newsletter.'
        required: true
        example: 01h3rdp1j9x2wx731hvzedf403
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1j9x2wx731hvzedf403
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: hartmann.lou@example.com
        type: string
        custom: []
    cleanBodyParameters:
      email: hartmann.lou@example.com
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","email":"john@snow.com", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/newsletters/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Newsletter'
      description: 'Deletes newsletter record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the newsletter.'
        required: true
        example: 01h3rdp1j9x2wx731hvzedf403
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1j9x2wx731hvzedf403
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/tags
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Tags'
      description: 'Returns paginated list of tags.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"Karaoke","description":"This is the regular karaoke.", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/tags
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Tag'
      description: 'Creates a new tag record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: accusantium
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: true
        example: nulla
        type: string
        custom: []
    cleanBodyParameters:
      title: accusantium
      description: nulla
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"Karaoke","description":"This is the regular karaoke.", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The title field is required.","errors":{"title":["The title field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/tags/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Tag'
      description: 'Returns a tag record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: deleniti
        type: string
        custom: []
    cleanUrlParameters:
      id: deleniti
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"Karaoke","description":"This is the regular karaoke.", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/tags/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Tag'
      description: 'Updates tag record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: quidem
        type: string
        custom: []
    cleanUrlParameters:
      id: quidem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: null
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"Karaoke","description":"This is the regular karaoke.", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/tags/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Tag'
      description: 'Deletes tag record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the tag.'
        required: true
        example: voluptatem
        type: string
        custom: []
    cleanUrlParameters:
      id: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/tickets
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Tickets'
      description: 'Returns paginated list of tickets.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15atksjr11hrck0d20230123","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"ticket_type":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Ticket Type","description":"This is the first ticket type"},"added_by":"01h3hkhxrh15atksjr11hrck0d","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"},"payment_confirmed":0,"payment_confirmed_by":"01h3hkhxrh15atksjr11hrck0d", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/tickets
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Ticket'
      description: 'Creates a new ticket record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      event_id:
        name: event_id
        description: ''
        required: true
        example: laudantium
        type: string
        custom: []
      ticket_type_id:
        name: ticket_type_id
        description: ''
        required: true
        example: aut
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: ea
        type: string
        custom: []
      amount_paid:
        name: amount_paid
        description: ''
        required: true
        example: 363056.0
        type: number
        custom: []
      currency_id:
        name: currency_id
        description: ''
        required: true
        example: nihil
        type: string
        custom: []
      payment_confirmed:
        name: payment_confirmed
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      event_id: laudantium
      ticket_type_id: aut
      user_id: ea
      amount_paid: 363056.0
      currency_id: nihil
      payment_confirmed: false
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15atksjr11hrck0d20230123","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"ticket_type":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Ticket Type","description":"This is the first ticket type"},"added_by":"01h3hkhxrh15atksjr11hrck0d","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"},"payment_confirmed":0,"payment_confirmed_by":"01h3hkhxrh15atksjr11hrck0d", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The added_by field is required.","errors":{"added_by":["The added_by field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/tickets/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Ticket'
      description: 'Returns a ticket record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 01h3rdp1cem74kxrvdgm08208g
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1cem74kxrvdgm08208g
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15atksjr11hrck0d20230123","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"ticket_type":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Ticket Type","description":"This is the first ticket type"},"added_by":"01h3hkhxrh15atksjr11hrck0d","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"},"payment_confirmed":0,"payment_confirmed_by":"01h3hkhxrh15atksjr11hrck0d", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/tickets/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Ticket'
      description: 'Updates ticket record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 01h3rdp1cem74kxrvdgm08208g
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1cem74kxrvdgm08208g
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      event_id:
        name: event_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      ticket_type_id:
        name: ticket_type_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      amount_paid:
        name: amount_paid
        description: ''
        required: false
        example: null
        type: string
        custom: []
      currency_id:
        name: currency_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      payment_confirmed:
        name: payment_confirmed
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      payment_confirmed: true
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15atksjr11hrck0d20230123","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"ticket_type":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Ticket Type","description":"This is the first ticket type"},"added_by":"01h3hkhxrh15atksjr11hrck0d","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"},"payment_confirmed":0,"payment_confirmed_by":"01h3hkhxrh15atksjr11hrck0d", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/tickets/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Ticket'
      description: 'Deletes ticket record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 01h3rdp1cem74kxrvdgm08208g
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1cem74kxrvdgm08208g
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/ticket-types
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Ticket Types'
      description: 'Returns paginated list of ticket types.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"title":"First event","slug":"first-event-sample","description":"This is the first event","available_tickets":200,"price":200,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"}, ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/ticket-types
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Ticket Type'
      description: 'Creates a new ticket type record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      event_id:
        name: event_id
        description: ''
        required: true
        example: non
        type: string
        custom: []
      title:
        name: title
        description: 'Must not be greater than 155 characters.'
        required: true
        example: oxjerhrutgac
        type: string
        custom: []
      description:
        name: description
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'Veritatis voluptatem maiores ducimus earum tempore.'
        type: string
        custom: []
      available_tickets:
        name: available_tickets
        description: ''
        required: true
        example: 1709.5553
        type: number
        custom: []
      price:
        name: price
        description: ''
        required: true
        example: voluptatem
        type: string
        custom: []
      currency_id:
        name: currency_id
        description: ''
        required: true
        example: illum
        type: string
        custom: []
    cleanBodyParameters:
      event_id: non
      title: oxjerhrutgac
      description: 'Veritatis voluptatem maiores ducimus earum tempore.'
      available_tickets: 1709.5553
      price: voluptatem
      currency_id: illum
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"title":"First event","slug":"first-event-sample","description":"This is the first event","available_tickets":200,"price":200,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"}, ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The title field is required.","errors":{"title":["The title field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/ticket-types/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Ticket Type'
      description: 'Returns a ticket type record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket type.'
        required: true
        example: 01h3rdp18hfrez47mhs1pjp6xe
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp18hfrez47mhs1pjp6xe
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"title":"First event","slug":"first-event-sample","description":"This is the first event","available_tickets":200,"price":200,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"}, ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/ticket-types/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Ticket type'
      description: 'Updates ticket type record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket type.'
        required: true
        example: 01h3rdp18hfrez47mhs1pjp6xe
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp18hfrez47mhs1pjp6xe
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      event_id:
        name: event_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      title:
        name: title
        description: ''
        required: false
        example: null
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: null
        type: string
        custom: []
      available_tickets:
        name: available_tickets
        description: ''
        required: false
        example: null
        type: string
        custom: []
      price:
        name: price
        description: ''
        required: false
        example: null
        type: string
        custom: []
      currency_id:
        name: currency_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"title":"First event","slug":"first-event-sample","description":"This is the first event","available_tickets":200,"price":200,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"}, ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/ticket-types/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Ticket Type'
      description: 'Deletes ticket type record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket type.'
        required: true
        example: 01h3rdp18hfrez47mhs1pjp6xe
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp18hfrez47mhs1pjp6xe
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/ticket-verifications
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Ticket Verifications'
      description: 'Returns paginated list of ticket verifications.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15SAMPLE","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"USD"}},"user":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","username":"user1"},"payment_confirmed":0, ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/ticket-verifications
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Ticket Verification'
      description: 'Creates a new ticket verification record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ticket_id:
        name: ticket_id
        description: ''
        required: true
        example: numquam
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: nulla
        type: string
        custom: []
      payment_confirmed:
        name: payment_confirmed
        description: ''
        required: true
        example: vel
        type: string
        custom: []
    cleanBodyParameters:
      ticket_id: numquam
      user_id: nulla
      payment_confirmed: vel
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15SAMPLE","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"USD"}},"user":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","username":"user1"},"payment_confirmed":0, ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/ticket-verifications/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Ticket Verification'
      description: 'Returns a ticket verification record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket verification.'
        required: true
        example: 01h3rdp1ft3ms6a8vx8z71wqe1
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1ft3ms6a8vx8z71wqe1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15SAMPLE","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"USD"}},"user":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","username":"user1"},"payment_confirmed":0, ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/ticket-verifications/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Ticket Verification'
      description: 'Updates ticket verification record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket verification.'
        required: true
        example: 01h3rdp1ft3ms6a8vx8z71wqe1
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1ft3ms6a8vx8z71wqe1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ticket_id:
        name: ticket_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: false
        example: null
        type: string
        custom: []
      payment_confirmed:
        name: payment_confirmed
        description: ''
        required: false
        example: null
        type: string
        custom: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15SAMPLE","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"USD"}},"user":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","username":"user1"},"payment_confirmed":0, ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/ticket-verifications/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE Ticket Verification'
      description: 'Deletes ticket verification record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket verification.'
        required: true
        example: 01h3rdp1ft3ms6a8vx8z71wqe1
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1ft3ms6a8vx8z71wqe1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/super-admin/users
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Users'
      description: 'Returns paginated list of users.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","role_id":"01h3hkhxrh15atksjr11hrck0d","username":"user1","name":"John Snow","email":"john@snow.com", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/super-admin/users
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST User'
      description: 'Creates a new user record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","role_id":"01h3hkhxrh15atksjr11hrck0d","username":"user1","name":"John Snow","email":"john@snow.com", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The name field is required.","errors":{"name":["The name field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/super-admin/users/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET User'
      description: 'Returns a user record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 01h3rdp0q7x270z9z8amap0fbq
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0q7x270z9z8amap0fbq
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","role_id":"01h3hkhxrh15atksjr11hrck0d","username":"user1","name":"John Snow","email":"john@snow.com", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/super-admin/users/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT User'
      description: 'Updates user record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 01h3rdp0q7x270z9z8amap0fbq
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0q7x270z9z8amap0fbq
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","role_id":"01h3hkhxrh15atksjr11hrck0d","username":"user1","name":"John Snow","email":"john@snow.com", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/super-admin/users/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE User'
      description: 'Deletes user record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 01h3rdp0q7x270z9z8amap0fbq
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp0q7x270z9z8amap0fbq
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 204
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/events
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Events'
      description: 'Returns paginated list of events.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event_hall":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall."},"host":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Host"},"title":"First Event","slug":"first-event","description":"This is the first event","start_date":"2023-01-23","start_time":"01:23","end_date":"2023-01-23","end_time":"01:23","age_limit":"18", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/events/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Event'
      description: 'Returns a event record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the event.'
        required: true
        example: 01h3rdp156apkxnycafx138fy1
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp156apkxnycafx138fy1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event_hall":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall."},"host":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Host"},"title":"First Event","slug":"first-event","description":"This is the first event","start_date":"2023-01-23","start_time":"01:23","end_date":"2023-01-23","end_time":"01:23","age_limit":"18", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/events/{event_slug}/tickets'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT Event'
      description: 'Updates event record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      event_slug:
        name: event_slug
        description: 'The slug of the event.'
        required: true
        example: 01h3rdp156apkxnycafx138fy1
        type: string
        custom: []
    cleanUrlParameters:
      event_slug: 01h3rdp156apkxnycafx138fy1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","event_hall":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event Hall","description":"This is the first event hall."},"host":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Host"},"title":"First Event","slug":"first-event","description":"This is the first event","start_date":"2023-01-23","start_time":"01:23","end_date":"2023-01-23","end_time":"01:23","age_limit":"18", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/tickets
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Tickets'
      description: 'Returns paginated list of tickets.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15atksjr11hrck0d20230123","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"ticket_type":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Ticket Type","description":"This is the first ticket type"},"added_by":"01h3hkhxrh15atksjr11hrck0d","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"},"payment_confirmed":0,"payment_confirmed_by":"01h3hkhxrh15atksjr11hrck0d", ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/tickets
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Ticket'
      description: 'Creates a new ticket record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      event_id:
        name: event_id
        description: ''
        required: true
        example: corrupti
        type: string
        custom: []
      ticket_type_id:
        name: ticket_type_id
        description: ''
        required: true
        example: quasi
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: voluptate
        type: string
        custom: []
      amount_paid:
        name: amount_paid
        description: ''
        required: true
        example: 23435.88270549
        type: number
        custom: []
      currency_id:
        name: currency_id
        description: ''
        required: true
        example: animi
        type: string
        custom: []
      payment_confirmed:
        name: payment_confirmed
        description: ''
        required: false
        example: false
        type: boolean
        custom: []
    cleanBodyParameters:
      event_id: corrupti
      ticket_type_id: quasi
      user_id: voluptate
      amount_paid: 23435.88270549
      currency_id: animi
      payment_confirmed: false
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15atksjr11hrck0d20230123","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"ticket_type":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Ticket Type","description":"This is the first ticket type"},"added_by":"01h3hkhxrh15atksjr11hrck0d","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"},"payment_confirmed":0,"payment_confirmed_by":"01h3hkhxrh15atksjr11hrck0d", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: '{"message":"The added_by field is required.","errors":{"added_by":["The added_by field is required."]}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/tickets/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Ticket'
      description: 'Returns a ticket record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket.'
        required: true
        example: 01h3rdp1cem74kxrvdgm08208g
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1cem74kxrvdgm08208g
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15atksjr11hrck0d20230123","event":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Event","description":"This is the first event"},"ticket_type":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"First Ticket Type","description":"This is the first ticket type"},"added_by":"01h3hkhxrh15atksjr11hrck0d","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"USD"},"payment_confirmed":0,"payment_confirmed_by":"01h3hkhxrh15atksjr11hrck0d", ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/v1/admin/ticket-verifications
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Ticket Verifications'
      description: 'Returns paginated list of ticket verifications.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters:
      page:
        name: page
        description: 'Page number.'
        required: false
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      page: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15SAMPLE","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"USD"}},"user":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","username":"user1"},"payment_confirmed":0, ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/admin/ticket-verifications
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST Ticket Verification'
      description: 'Creates a new ticket verification record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      ticket_id:
        name: ticket_id
        description: ''
        required: true
        example: incidunt
        type: string
        custom: []
      user_id:
        name: user_id
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      payment_confirmed:
        name: payment_confirmed
        description: ''
        required: true
        example: animi
        type: string
        custom: []
    cleanBodyParameters:
      ticket_id: incidunt
      user_id: qui
      payment_confirmed: animi
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15SAMPLE","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"USD"}},"user":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","username":"user1"},"payment_confirmed":0, ...}, ...}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/admin/ticket-verifications/{id}'
    metadata:
      groupName: 'Admin endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET Ticket Verification'
      description: 'Returns a ticket verification record.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the ticket verification.'
        required: true
        example: 01h3rdp1ft3ms6a8vx8z71wqe1
        type: string
        custom: []
    cleanUrlParameters:
      id: 01h3rdp1ft3ms6a8vx8z71wqe1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket":{"id":"01h3hkhxrh15atksjr11hrck0d","ticket_number":"01h3hkhxrh15SAMPLE","amount_paid":12,"currency":{"id":"01h3hkhxrh15atksjr11hrck0d","title":"USD"}},"user":{"id":"01h3hkhxrh15atksjr11hrck0d","name":"John Snow","username":"user1"},"payment_confirmed":0, ...}, ...}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message":"Record not found."}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
